<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycode.jxzlpj.jiaoxuepingjia.xspj.mapper.XspjMapper">

    <select id="getPageList" resultType="com.mycode.jxzlpj.jiaoxuepingjia.xspj.domain.Xspj">
        <choose>
            <when test="accountType == 'student'">
                SELECT T2.*
                ,(case when pj.COURSE_CODE is not null then 1 else 2 end) isPj,pjSuggest
                FROM SYS_DATA_XSXK T1
                LEFT JOIN SYS_DATA_KC T2 ON T2.COURSE_CODE = T1.COURSE_CODE AND T2.XN = T1.XN AND T2.XQ = T1.XQ
                LEFT JOIN SYS_DATA_JSRK T3 ON T3.XN = T2.XN AND T3.XQ = T2.XQ AND T3.USER_ID = T2.SKJS_CODE AND T3.COURSE_CODE = T2.COURSE_CODE
--                 LEFT JOIN SYS_DATA_JS T4 ON T4.USER_ID = T3.USER_ID
                LEFT JOIN (
                    SELECT xn, xq, COURSE_CODE, teacher_code, user_id, t2.answer as pjSuggest
                    FROM JXPJ_XSPJ_DFPJ t1 LEFT JOIN JXPJ_XSPJ_DFPJ_ITEM t2 on t2.relation_code = t1.code
                    where t2.target_code = 'suggest'
                ) pj on pj.xn = T1.xn and pj.xq = T1.xq and pj.COURSE_CODE = T1.COURSE_CODE and pj.teacher_code = T3.USER_ID and pj.user_id = T1.USER_ID
                WHERE T1.USER_ID = #{userId}
                <if test="xn != null and xn != ''">/*学年*/
                    and T1.XN = #{xn}
                </if>
                <if test="xq != null and xq != ''">/*学期*/
                    and T1.XQ = #{xq}
                </if>
            </when>
            <when test="accountType == 'teacher'">
                SELECT T2.*
                ,(case when pj.COURSE_CODE is not null then 1 else 2 end) isPj
                FROM SYS_DATA_JSRK T1
                LEFT JOIN SYS_DATA_KC T2 on T2.XN = T1.XN AND T2.XQ = T1.XQ AND T2.COURSE_CODE = T1.COURSE_CODE and T2.SKJS_CODE = T1.USER_ID
                LEFT JOIN (
                    SELECT DISTINCT XN, XQ, COURSE_CODE, TEACHER_CODE FROM JXPJ_XSPJ_DFPJ
                ) pj on pj.xn = T2.xn and pj.xq = T2.xq and pj.COURSE_CODE = T2.COURSE_CODE and pj.teacher_code = T2.SKJS_CODE
                where T1.USER_ID = #{userId}
                <if test="xn != null and xn != ''">/*学年*/
                    and T1.XN = #{xn}
                </if>
                <if test="xq != null and xq != ''">/*学期*/
                    and T1.XQ = #{xq}
                </if>
            </when>
            <otherwise>/*若是其他类型的账号访问，则返回所有已评的课程信息*/
                SELECT DISTINCT t2.*
                ,1 as isPj
                FROM JXPJ_XSPJ_DFPJ pj
                LEFT JOIN SYS_DATA_KC t2 on t2.xn = pj.xn and t2.xq = pj.xq and t2.COURSE_CODE = pj.COURSE_CODE and t2.SKJS_CODE = pj.TEACHER_CODE
                where 1=1
                <if test="xn != null and xn != ''">/*学年*/
                    and pj.XN = #{xn}
                </if>
                <if test="xq != null and xq != ''">/*学期*/
                    and pj.XQ = #{xq}
                </if>
            </otherwise>
        </choose>
        <if test="courseName != null and courseName != ''">/*课程名称*/
            and T2.COURSE_NAME like concat(concat('%',#{courseName}),'%')
        </if>
        <if test="isPj != null and isPj != ''">/*评教状态*/
            <if test="isPj == 1">
                and pj.COURSE_CODE is not null
            </if>
            <if test="isPj == 2">
                and pj.COURSE_CODE is null
            </if>
        </if>
    </select>

    <insert id="insert">
        insert into JXPJ_XSPJ_DFPJ (CODE, XN, XQ, COURSE_CODE, TEACHER_CODE, USER_ID, USER_NAME, CREATE_DATE)
        values (#{code},#{xn},#{xq},#{courseCode},#{teacherCode},#{userId},#{userName},CURRENT_DATE)
    </insert>
    <insert id="insertItem">
        insert all
        <foreach collection="paramMap" index="key"  item="val">
            into JXPJ_XSPJ_DFPJ_ITEM (RELATION_CODE, TEMPLATE_CODE, TARGET_CODE, ANSWER)
            VALUES(#{xspj.code},#{xspj.templateCode},#{key,jdbcType=VARCHAR},#{val,jdbcType=VARCHAR})
        </foreach>
        select 1 from dual
    </insert>

    <select id="getPjInfo" resultType="java.util.Map">
        select count(distinct code) as "pjNum"
        ,sum(case when answer = '非常同意' then target_score
                when answer = '比较同意' then target_score*0.8
                when answer = '一般' then target_score*0.6
                when answer = '不太同意' then target_score*0.4
                when answer = '不同意' then target_score*0.2 end)/count(distinct code) as "totalAvgScore"
        from jxpj_xspj_dfpj pj
        left join jxpj_xspj_dfpj_item it on it.relation_code = pj.code
        left join jxpj_pjset_template_target tt on tt.template_code = it.template_code and tt.target_code = it.target_code
        left join jxpj_pjset_target tg on tg.target_code = tt.target_code
        where xn = #{xn} and xq = #{xq} and course_code = #{courseCode} and teacher_code = #{teacherCode}
    </select>
    <select id="getPjInfoSuggestList" resultType="java.lang.String">
        select answer as "pjSuggest"
        from jxpj_xspj_dfpj pj left join jxpj_xspj_dfpj_item it on it.relation_code = pj.code
        where xn = #{xn} and xq = #{xq} and course_code = #{courseCode} and teacher_code = #{teacherCode} and target_code = 'suggest'
    </select>

    <select id="getPjInfoTransferData" resultType="java.util.Map">
SELECT T2.COURSE_CODE "courseCode", T2.COURSE_NAME "courseName", T4.USER_ID "teacherCode", T4.USER_NAME "teacherName"
FROM SYS_DATA_XSXK T1
LEFT JOIN SYS_DATA_KC T2 ON T2.COURSE_CODE = T1.COURSE_CODE
LEFT JOIN SYS_DATA_JSRK T3 ON T3.USER_ID = T2.SKJS_CODE AND T3.COURSE_CODE = T2.COURSE_CODE
LEFT JOIN SYS_DATA_JS T4 ON T4.USER_ID = T3.USER_ID
WHERE T1.USER_ID = #{userId}
    </select>

    <insert id="insertBjpj">
        insert into JXPJ_XSPJ_BJPJ (CODE, TEMPLATE_CODE, PREFER_TEACHER, USER_ID, USER_NAME, CREATE_DATE)
        VALUES (#{code},#{templateCode},#{preferTeacher},#{userId},#{userName},CURRENT_DATE)
    </insert>
    <insert id="insertBjpjTarget">
        insert all
        <foreach collection="mapList" index="idx" item="obj">
            INTO JXPJ_XSPJ_BJPJ_TARGET (RELATION_CODE, COURSE_CODE, TARGET_CODE, SCORE)
            VALUES (#{obj.relationCode},#{obj.courseCode},#{obj.targetCode},#{obj.score})
        </foreach>
        select 1 from dual
    </insert>
    <insert id="insertBjpjSuggest">
        insert into JXPJ_XSPJ_BJPJ_SUGGEST (RELATION_CODE, COURSE_CODE, SUGGEST)
        values (#{relationCode},#{courseCode},NVL(#{suggest}, '无建议或意见') )
    </insert>

    <select id="selectBjpjSuggest" resultType="java.lang.String">
        select SUGGEST
        from JXPJ_XSPJ_BJPJ_SUGGEST
        where RELATION_CODE = #{relationCode} and COURSE_CODE = #{courseCode}
    </select>
    <delete id="deleteBjpjSuggest">
        delete from JXPJ_XSPJ_BJPJ_SUGGEST
        where RELATION_CODE = #{relationCode} and COURSE_CODE = #{courseCode}
    </delete>

    <select id="getBjpjPageList" resultType="com.mycode.jxzlpj.jiaoxuepingjia.xspj.domain.Xspj">
        <choose>
            <when test="accountType == 'teacher'">
                SELECT c.course_code,c.course_name,c.course_attr,c.XF,c.XS,c.ZY_NAME,c.XY_NAME
                ,(case when pj.COURSE_CODE is not null then 1 else 2 end) isPj
                FROM SYS_DATA_JSRK dtc
                LEFT JOIN SYS_DATA_KC c on c.COURSE_CODE = DTC.COURSE_CODE
                LEFT JOIN (
                    SELECT DISTINCT course_code
                    FROM (
                        SELECT TEMPLATE_CODE FROM (
                            SELECT ROWNUM rn, TEMPLATE_CODE
                            FROM JXPJ_PJSET_TEMPLATE
                            where TEMPLATE_TYPE = '学生评教' ORDER BY END_DATE desc
                        ) where rn = 1
                    ) t
                    LEFT JOIN JXPJ_XSPJ_BJPJ t1 on t1.TEMPLATE_CODE = t.TEMPLATE_CODE
                    LEFT JOIN JXPJ_XSPJ_BJPJ_SUGGEST t2 on t2.relation_code = t1.code
                    where t2.relation_code is not null
                ) pj on pj.COURSE_CODE = c.COURSE_CODE
                where dtc.USER_ID = #{userId}
            </when>
            <otherwise>
                SELECT c.course_code "courseCode",c.course_name "courseName",c.course_attr "courseAttr",c.xf,c.xs,c.ZY_NAME "majorName",c.XY_NAME "collegeName"
                FROM (
                    SELECT DISTINCT course_code
                    FROM (
                        SELECT TEMPLATE_CODE FROM (
                            SELECT ROWNUM rn, TEMPLATE_CODE
                            FROM JXPJ_PJSET_TEMPLATE
                            where TEMPLATE_TYPE = '学生评教' ORDER BY END_DATE desc
                        ) where rn = 1
                    ) t LEFT JOIN JXPJ_XSPJ_BJPJ t1 on t1.TEMPLATE_CODE = t.TEMPLATE_CODE
                    LEFT JOIN JXPJ_XSPJ_BJPJ_SUGGEST t2 on t2.relation_code = t1.code
                    where t2.relation_code is not null
                ) pj LEFT JOIN SYS_DATA_KC c on c.COURSE_CODE = pj.COURSE_CODE
            </otherwise>
        </choose>

    </select>
    <select id="getBjpjPjInfo" resultType="java.util.Map">
        SELECT pj.template_code,pj.TARGET_CODE,target_content,target_score,avg(score) avg_score
        FROM(
                SELECT TT.*,target_content,target_score
                FROM (
                        SELECT TEMPLATE_CODE FROM (
                                        SELECT ROWNUM rn, TEMPLATE_CODE
                                        FROM JXPJ_PJSET_TEMPLATE
                                        where TEMPLATE_TYPE = '学生评教' ORDER BY END_DATE desc
                        ) where rn = 1
                ) t
                LEFT JOIN JXPJ_PJSET_TEMPLATE_TARGET tt on TT.TEMPLATE_CODE = t.TEMPLATE_CODE
                LEFT JOIN JXPJ_PJSET_TARGET tg on tg.target_code = tt.target_code
        ) t2 LEFT JOIN (
                select template_code,target_code,score
                FROM JXPJ_XSPJ_BJPJ t1
                LEFT JOIN JXPJ_XSPJ_BJPJ_TARGET t2 on t2.relation_code = t1.code
                where course_code = #{courseCode}
        ) pj on PJ.TEMPLATE_CODE = t2.TEMPLATE_CODE and pj.target_code = t2.target_code
        GROUP BY pj.template_code,pj.TARGET_CODE,target_content,target_score
    </select>
    <select id="getBjpjPjInfoSuggestList" resultType="java.lang.String">
        SELECT suggest
        FROM JXPJ_XSPJ_BJPJ t1
        LEFT JOIN JXPJ_XSPJ_BJPJ_SUGGEST t2 on t2.relation_code = t1.code
        where t1.TEMPLATE_CODE = #{templateCode} and t2.COURSE_CODE = #{courseCode}
    </select>
</mapper>