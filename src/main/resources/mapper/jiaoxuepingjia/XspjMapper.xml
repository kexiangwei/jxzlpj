<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycode.jiaoxuepingjia.xspj.mapper.XspjMapper">

    <select id="getPageList" resultType="com.mycode.jiaoxuepingjia.xspj.domain.Xspj">
        <choose>
            <when test="accountType == 'student'">
                SELECT c.course_code,c.course_name,c.course_attr,c.STU_SCORE,c.STU_HOUR,c.MAJOR_NAME,c.COLLEGE_NAME
                ,(case when pj.COURSE_CODE is not null then 1 else 2 end) is_pj
                FROM DATA_STUDENT_COURSE sc
                LEFT JOIN DATA_COURSE c on c.COURSE_CODE = sc.COURSE_CODE
                LEFT JOIN (
                    SELECT DISTINCT COURSE_CODE,user_id FROM JXPJ_XSPJ
                ) pj on pj.COURSE_CODE = sc.COURSE_CODE and pj.user_id = sc.USER_ID
                WHERE sc.USER_ID = #{userId}
            </when>
            <when test="accountType == 'teacher'">
                SELECT c.course_code,c.course_name,c.course_attr,c.STU_SCORE,c.STU_HOUR,c.MAJOR_NAME,c.COLLEGE_NAME
                ,(case when pj.COURSE_CODE is not null then 1 else 2 end) is_Pj
                FROM DATA_TEACHER_COURSE dtc
                LEFT JOIN DATA_COURSE c on c.COURSE_CODE = DTC.COURSE_CODE
                LEFT JOIN (
                  SELECT DISTINCT COURSE_CODE FROM JXPJ_XSPJ
                ) pj on pj.COURSE_CODE = c.COURSE_CODE
                where dtc.USER_ID = #{userId}
            </when>
            <otherwise><!-- 若是其他类型的账号访问，则返回所有已评的课程信息 -->
                SELECT c.course_code,c.course_name,c.course_attr,c.STU_SCORE,c.STU_HOUR,c.MAJOR_NAME,c.COLLEGE_NAME
                ,1 as is_Pj
                FROM DATA_COURSE c
                LEFT JOIN (
                    SELECT DISTINCT COURSE_CODE FROM JXPJ_XSPJ
                ) pj on pj.COURSE_CODE = c.COURSE_CODE
                where PJ.COURSE_CODE is not null
                ORDER BY pj.COURSE_CODE
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
        insert all
        <foreach collection="paramMap" index="key"  item="val">
            INTO JXPJ_XSPJ (COURSE_CODE,TEMPLATE_CODE,TARGET_CODE,ANSWER,USER_ID,USER_NAME,CREATE_DATE)
            VALUES(#{xspj.courseCode,jdbcType=VARCHAR},#{templateCode,jdbcType=VARCHAR},#{key,jdbcType=VARCHAR},#{val,jdbcType=VARCHAR}
            ,#{xspj.userId,jdbcType=VARCHAR},#{xspj.userName,jdbcType=VARCHAR},CURRENT_DATE)
        </foreach>
        select 1 from dual
    </insert>

    <select id="getPjInfo" resultType="java.util.Map">
        SELECT course_code,template_code,TARGET_CODE,target_content,target_score,score/stu_num as avg_score
        FROM (
            SELECT pj.course_code,pj.template_code,pj.TARGET_CODE,target_content,target_score
            ,count(DISTINCT USER_ID) stu_num
            ,sum(case when answer = '非常同意' then target_score
            when answer = '比较同意' then target_score*0.8
            when answer = '一般' then target_score*0.6
            when answer = '不太同意' then target_score*0.4
            when answer = '不同意' then target_score*0.2 end) score
            FROM(
                SELECT TT.*,target_content,target_score
                FROM (
                    SELECT TEMPLATE_CODE
                    FROM JXPJ_PJSET_TEMPLATE
                    where TEMPLATE_TYPE = '学生评教' and ROWNUM = 1
                    ORDER BY CREATE_DATE DESC
                ) t
                LEFT JOIN JXPJ_PJSET_TEMPLATE_TARGET tt on TT.TEMPLATE_CODE = t.TEMPLATE_CODE
                LEFT JOIN JXPJ_PJSET_TARGET tg on tg.target_code = tt.target_code
            ) t LEFT JOIN JXPJ_XSPJ pj on PJ.TEMPLATE_CODE = t.TEMPLATE_CODE and pj.target_code = t.target_code
                where pj.course_code = #{courseCode}
            GROUP BY pj.course_code,pj.template_code,pj.TARGET_CODE,target_content,target_score
        )t
    </select>
    <select id="getPjSuggestList" resultType="java.lang.String">
        SELECT ANSWER FROM JXPJ_XSPJ where COURSE_CODE = #{courseCode} and TEMPLATE_CODE = #{templateCode} and TARGET_CODE = 'suggest'
    </select>

    <select id="getPjInfoTransferData" resultType="java.util.Map">
SELECT T2.COURSE_CODE "courseCode", T2.COURSE_NAME "courseName", T4.code "teacherCode", T4.name "teacherName"
FROM DATA_STUDENT_COURSE T1
LEFT JOIN DATA_COURSE T2 ON T2.COURSE_CODE = T1.COURSE_CODE
LEFT JOIN DATA_TEACHER_COURSE T3 ON T3.COURSE_CODE = T2.COURSE_CODE
LEFT JOIN DATA_TEACHER T4 ON T4.CODE = T3.USER_ID
WHERE T1.USER_ID = #{userId}
    </select>
</mapper>